tasks:
  - name: cdk
    before: |
      npm i -g aws-cdk 
  - name: terraform
    before: |
      sudo apt-get update && sudo apt-get install -y gnupg software-properties-common
      wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
      gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
      echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
      sudo apt update
      sudo apt-get install terraform

  - name: setup-aws-cli
    init: |
      cd /workspace
      curl -O https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
      unzip awscli-exe-linux-x86_64.zip
      sudo ./aws/install
      cd $THEIA_WORKSPACE_ROOT
      aws configure set region us-east-1
      aws configure set output json
      aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
      aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY

  - name: setup-python-env
    init: |
      cd aws/s3/sdk/Python
      python -m venv python_venv
      . python_venv/bin/activate
      pip install boto3

  - name: configure-bashrc
    init: |
      # Add virtual environment activation logic to .bashrc
      echo 'cd_func () {' >> ~/.bashrc
      echo '  builtin cd "$@"' >> ~/.bashrc
      echo '  if [[ "$PWD" == */aws/s3/sdk/Python ]]; then' >> ~/.bashrc
      echo '    if [ -d "python_venv" ]; then' >> ~/.bashrc
      echo '      echo "Activating virtual environment in $PWD"' >> ~/.bashrc
      echo '      . python_venv/bin/activate' >> ~/.bashrc
      echo '    fi' >> ~/.bashrc
      echo '  fi' >> ~/.bashrc
      echo '}' >> ~/.bashrc
      echo 'alias cd="cd_func"' >> ~/.bashrc
      source ~/.bashrc







